%section{ "ng-app" => 'shirtsApp', 'ng-controller' => 'ShirtsCtrl' }
  .container.main
    = form_for [:admin, @shirt], html: { multipart: true, id: 'shirt-form' } do |f|
      .alert.error{ 'ng-show' => 'errors.general'} {{ errors.general }}
      .input-container
        .image-preview
          .input
            %label Choose design image
            = f.file_field :design, 'image-preview' => '', 'target' => '#preview', 'hide' => '.default-shirt'
            %button.button.upload-button{ 'eat-click' => '' } Choose Design
            .preview
              %img#preview{ 'ng-src' => '{{ shirt.design_large }}', 'ng-show' => 'shirt.design_large' }
              %i.icon-tshirt.default-shirt.default-preview{ 'ng-hide' => 'shirt.design_large' }
        .input
          %label Name
          %input.short{ type: 'text', id: 'name', 'ng-model' => 'shirt.name', 'ng-class' => '{ error: errors.name }' }
          .alert.error{ 'ng-show' => 'errors.name' }
            %button.close{ 'hide-alert' => 'errors.name = ""', 'eat-click' => '' } &times;
            {{ errors.name }}
        .input
          %label Price
          %input.short{ type: 'text', id: 'price', 'ng-model' => 'shirt.price', 'ng-class' => '{ error: errors.price }' }
          .alert.error{ 'ng-show' => 'errors.price' }
            %button.close{ 'hide-alert' => 'errors.price = ""', 'eat-click' => '' } &times;
            {{ errors.price }}
        .input
          %label.checkbox In Stock
          %span.unchecked{ 'ng-hide' => 'shirt.stock', 'ng-click' => 'shirt.stock = true' } &#10004;
          %span.checked{ 'ng-show' => 'shirt.stock', 'ng-click' => 'shirt.stock = false' } &#10004;
        .angular-controller{ 'ng-controller' => 'ColorsCtrl'}
          .input
            %label Colors
            .alert.error.short{ 'ng-show' => 'errors.colors' }
              %button.close{ 'hide-alert' => 'errors.colors = ""', 'eat-click' => '' } &times;
              {{ errors.colors }}
            .colors
              .color-box
                .color{ 'ng-repeat' => 'color in colors', 'ng-class' => '{ selected: shirt_has_color(color) }', 'ng-click' => 'toggle_color(color)' }
                  %div{ 'ng-style' => '{"background-color": format_color(color.hex_value)}' }
            = link_to '', 'ng-show' => '!is_editing_color', 'ng-click' => 'is_editing_color = true' do
              %i.icon-plus
              Offer new shirt color

          .input.keep-margin.clearfix{ 'ng-show' => 'is_editing_color' }
            %h5 Please enter the color HEX value (e.g. #CCC )
            %input.color-input{ type: 'text', id: 'color', 'ng-model' => 'new_color_value', 'ng-class' => '{ error: color_errors.hex_value }' }
            .colors.no-margin
              .color.color-preview
                %div{ 'ng-style' => '{"background-color": format_color(new_color_value)}' }
            .alert.error{ 'ng-show' => '!is_valid()' }
              %button.close{ 'hide-alert' => 'reset_errors()', 'eat-click' => '' } &times;
              {{ full_error_messages() }}
            = link_to 'Save color', '', class: 'button save', 'ng-click' => 'save_color()'

        .angular-controller{ 'ng-controller' => 'SizesCtrl' }
          .input
            %label Sizes
            .alert.error.short{ 'ng-show' => 'errors.sizes' }
              %button.close{ 'hide-alert' => 'errors.sizes = ""', 'eat-click' => '' } &times;
              {{ errors.sizes }}
            .sizes
              %span{ 'ng-repeat' => 'size in sizes', 'ng-class' => '{ selected: shirt_has_size(size)}', 'ng-click' => 'toggle_size(size)' }
                {{ size.size }}
            = link_to '' , 'ng-show' => '!is_editing_size', 'ng-click' => 'is_editing_size = true' do
              %i.icon-plus
              Offer new size

          .input.clearfix{ 'ng-show' => 'is_editing_size' }
            %h5 Please enter the size (e.g. XL )
            %input.extra-short{ type: 'text', id: 'color', 'ng-model' => 'new_size', 'ng-class' => '{ error: !is_valid() }' }
            = link_to 'Save size', '', class: 'button', 'ng-click' => 'save_size()'
            .alert.error.short{ 'ng-show' => '!is_valid()' }
              %button.close{ 'hide-alert' => 'reset_errors()', 'eat-click' => '' } &times;
              {{ full_error_messages() }}

        = f.hidden_field :name, 'hidden-value' => 'shirt.name'
        = f.hidden_field :price, 'hidden-value' => 'shirt.price'
        = f.hidden_field :stock, 'hidden-value' => 'shirt.stock'
        = hidden_field_tag :colors, '', 'hidden-value' => 'shirt.colors'
        = hidden_field_tag :sizes, '', 'hidden-value' => 'shirt.sizes'

      .submit
        = link_to 'Cancel', request.referer, class: 'button grey'
        = link_to 'Save shirt', '', class: 'button pull-right', 'submit-form' => '#shirt-form', 'valid' => 'is_valid()'
        - if action.eql? 'edit'
          = link_to 'Delete', '', class: 'button red pull-right', 'ng-click' => 'delete(shirt, redirect_callback)'

:javascript
  $(document).ready(function() {
    AngularDataSeed({
      shirt: #{render partial: 'shirts/shirt', locals: { shirt: @shirt }, formats: [:json]},
      colors: #{render partial: 'colors/colors', locals: { colors: @colors }, formats: [:json]},
      sizes: #{render partial: 'sizes/sizes', locals: { sizes: @sizes }, formats: [:json]},
      dependencies: { authenticity_token: '#{form_authenticity_token}' }
    });
  })