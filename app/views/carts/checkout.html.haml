- content_for :step do
  2

- content_for :angular_app do
  cartCheckoutApp

- content_for :angular_controller do
  CartCheckoutCtrl

- content_for :cart_contents do
  .alert.error{ 'ng-show' => 'errors.server' }
    %button.close{ 'hide-alert' => 'errors.server = ""', 'eat-click' => '', tabindex: 0 } &times;
    {{ errors.server }}
  .clearfix
    .left-inputs
      %h4.bottom-border.extended-margin-bottom Your Information
      .input
        %label
          First Name
          %span.required *
        %input{ type: 'text', 'ng-model' => 'customer.first_name', 'ng-class' => '{ error: errors.first_name }', tabindex: 1 }
        .alert.error{ 'ng-show' => 'errors.first_name' }
          %button.close{ 'hide-alert' => 'errors.first_name = ""', 'eat-click' => '', tabindex: 0 } &times;
          {{ errors.first_name }}
      .input
        %label
          Last Name
          %span.required *
        %input{ type: 'text', 'ng-model' => 'customer.last_name', 'ng-class' => '{ error: errors.last_name }', tabindex: 2 }
        .alert.error{ 'ng-show' => 'errors.last_name' }
          %button.close{ 'hide-alert' => 'errors.last_name = ""', 'eat-click' => '', tabindex: 0 } &times;
          {{ errors.last_name }}
      .input
        %label
          Email
          %span.required *
        %input{ type: 'text', 'ng-model' => 'customer.email', 'ng-class' => '{ error: errors.email }', tabindex: 3 }
        .alert.error{ 'ng-show' => 'errors.email' }
          %button.close{ 'hide-alert' => 'errors.email = ""', 'eat-click' => '', tabindex: 0 } &times;
          {{ errors.email }}
      .input
        %span.required *
        \= Required

    .right-inputs
      %h4.bottom-border.extended-margin-bottom Shipping Information
      .input
        %label
          Address
          %span.required *
        %input{ type: 'text', 'ng-model' => 'customer.address', 'ng-class' => '{ error: errors.address }', tabindex: 4 }
        .alert.error{ 'ng-show' => 'errors.address' }
          %button.close{ 'hide-alert' => 'errors.address = ""', 'eat-click' => '', tabindex: 0 } &times;
          {{ errors.address }}
      .input
        %label
          City
          %span.required *
        %input{ type: 'text', 'ng-model' => 'customer.city', 'ng-class' => '{ error: errors.city }', tabindex: 5 }
        .alert.error{ 'ng-show' => 'errors.city' }
          %button.close{ 'hide-alert' => 'errors.city = ""', 'eat-click' => '', tabindex: 0 } &times;
          {{ errors.city }}
      .input
        .left-inputs
          %label
            State
            %span.required *
          %input{ type: 'text', 'ng-model' => 'customer.state', 'ng-class' => '{ error: errors.email }', tabindex: 6, maxlength: 2 }
          .alert.error{ 'ng-show' => 'errors.state' }
            %button.close{ 'hide-alert' => 'errors.state = ""', 'eat-click' => '', tabindex: 0 } &times;
            {{ errors.state }}
        .right-inputs
          %label
            Zip
            %span.required *
          %input{ type: 'text', 'ng-model' => 'customer.zipcode', 'ng-class' => '{ error: errors.zipcode }', tabindex: 7, maxlength: 5 }
          .alert.error{ 'ng-show' => 'errors.zipcode' }
            %button.close{ 'hide-alert' => 'errors.zipcode = ""', 'eat-click' => '', tabindex: 0 } &times;
            {{ errors.zipcode }}

  .order-details
    %h4 Your Order
    %table.full-width
      %thead
        %tr
          %td.name Product
          %td.shirt-price Price
          %td Quantity
          %td.shirt-total Total
      %tbody
        %tr{ 'ng-repeat' => 'cart_shirt in cart.cart_shirts' }
          %td.name
            %i.icon-tshirt
            {{ cart_shirt.name }}
          %td.shirt-price {{ cart_shirt.price | currency }}
          %td {{ cart_shirt.quantity }}
          %td {{ total(cart_shirt) | currency }}

    .cart-total.pull-right
      %h3.inline Total
      %span {{ cart.total | currency }}

  :javascript
    $(document).ready(function() {
      AngularDataSeed({
        cart: #{render partial: 'carts/cart', locals: { cart: current_cart }, formats: [:json]},
        customer: #{render partial: 'customers/customer', locals: { customer: @customer }, formats: [:json] },
        authenticity_token: "#{form_authenticity_token}"
      });
    });

- content_for :buttons do
  = link_to '&larr; Cart'.html_safe, carts_path, class: 'button grey'
  = link_to 'Payment &rarr;'.html_safe, '', class: 'button pull-right red', 'ng-click' => 'save_customer()'